# Name of this workflow
name: Burger for Python

# Only process when a new version is pushed on master
on:
  push:
    branches:
      - "master"

jobs:
  "Run_Pytest":
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # Here are all the operating systems and python versions to test on.
      matrix:
        name:
          - "ubuntu-20-py27"
          - "ubuntu-20-py35"
          - "ubuntu-20-py36"
          - "ubuntu-20-py37"
          - "ubuntu-20-py38"
          - "ubuntu-20-py39"
          - "ubuntu-20-py310"
          - "ubuntu-20-pypy2"
          - "ubuntu-20-pypy3"

        # Specific data for each version being built
        include:
          - name: "ubuntu-20-py27"
            python: "2.7"
            os: "ubuntu-20.04"
            tox_env: "py27"
          - name: "ubuntu-20-py35"
            python: "3.5"
            os: "ubuntu-20.04"
            tox_env: "py35"
          - name: "ubuntu-20-py36"
            python: "3.6"
            os: "ubuntu-20.04"
            tox_env: "py36"
          - name: "ubuntu-20-py37"
            python: "3.7"
            os: "ubuntu-20.04"
            tox_env: "py37"
          - name: "ubuntu-20-py38"
            python: "3.8"
            os: "ubuntu-20.04"
            tox_env: "py38"
          - name: "ubuntu-20-py39"
            python: "3.9"
            os: "ubuntu-20.04"
            tox_env: "py39"
          - name: "ubuntu-20-py310"
            python: "3.10"
            os: "ubuntu-20.04"
            tox_env: "3.10"
          - name: "ubuntu-20-pypy2"
            python: "pypy2"
            os: "ubuntu-20.04"
            tox_env: "pypy2"
          - name: "ubuntu-20-pypy3"
            python: "pypy3"
            os: "ubuntu-20.04"
            tox_env: "pypy3"

    #        python-version:
    #          ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10", "pypy2", "pypy3"]
    #       os: [ubuntu-18.04, ubuntu-20.04, windows-2019, macos-11, macos-10.15]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 tox virtualenv wslwinreg
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with tox
        run: "tox -e ${{ matrix.tox_env }}-cov-report"
